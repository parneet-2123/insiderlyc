---
import Booksellers from "../../data/Booksellers.json";
import {GeneratedISBN} from "./ConvertISBN.js";
export interface Props {
	title: string;
	description: string;
	ButtonClasses: string;
	editions: Array<{
		binding: string;
		isbn: string;
		asin: string;
		apple_id: string;
	}>;

}

const { content } = Astro.props;
const { editions, title } = content;

//---- BOOKSELLERS  ----//

// PRINT
let Print = Booksellers.filter(service => (typeof service.type == "string") ? (service.type == "print") : (service.type.includes("print"))).filter(service => service.show != false)

// Ebook
let Ebook = Booksellers!.filter(service => (typeof service.type == "string") ? (service.type == "ebook") : (service.type.includes("ebook"))).filter(service => service.show != false) ?? null;

const Kindle = Ebook.filter(service => (service.id == "amazon"))
const AppleBooks = Ebook.filter(service => (service.id == "apple_books"))

// AudioBook
let Audiobook = Booksellers.filter(service => (typeof service.type == "string") ? (service.type == "audiobook") : (service.type.includes("audiobook"))).filter(service => service.show != false) ?? null;

let Audible = Audiobook!.filter(service => (service.id == "audible"));

//---- EDITIONS  ----//
let EditionPrint = editions?.filter(edition => (edition.isbn) && (edition.binding === "paperback" || edition.binding === "hardcover")) ?? null;

const PrintISBN = EditionPrint ? EditionPrint[0]?.isbn : null;

let EditionEbooks = editions?.filter(edition => edition.binding === "e-book") ?? null;

const EbookISBN = EditionEbooks ? EditionEbooks[0]?.isbn : null;
const EbookAsin = EditionEbooks ? EditionEbooks[0]?.asin : null;
const EbookAppleID = EditionEbooks ? EditionEbooks[0]?.apple_id : null;

let EditionAudiobook = editions?.filter(edition => (edition.binding === "audiobook")) ?? null;

const AudiobookAsin = EditionAudiobook ? EditionAudiobook[0]?.asin : null;
const AudiobookISBN = EditionAudiobook ? EditionAudiobook[0]?.isbn : null;

//---- Convert ISBN13 to ISBN10 for Amazon ----\\
const isbn13 = PrintISBN
const isbn10 = GeneratedISBN(isbn13);

// Passing buttonClasses as a class from styles/global.css
const ButtonClasses = "button-buy"
---

 
{((Print.length > 0) && PrintISBN) && 
	<div>Buy <em>{title}</em></div>

<Fragment>
	{Print.map(service => (
		<a class={ButtonClasses} href={service.url.replace(/\%s/, service.id=="amazon" ? isbn10 : PrintISBN )} target="_blank" class="block">
			{service.label}
		</a>					
	))}
</Fragment>
}

{(Ebook.length > 0) && (EbookISBN || EbookAsin || EbookAppleID) &&
	<div class="mt-1">Ebook</div>	
}

{(Kindle.length > 0 && EbookAsin) && 
	<Fragment>					
		{
			<a class={ButtonClasses} href={Kindle[0].url.replace(/\%s/, EbookAsin)} target="_blank" class="block">
				{Kindle[0].label}
			</a>																		
		}				
	</Fragment>
}

{((AppleBooks.length > 0)  && EbookAppleID) && 
	<Fragment>					
		{
			<a class={ButtonClasses} href={AppleBooks[0].url.replace(/\%s/, EbookAppleID)} target="_blank" class="block">
				{AppleBooks[0].label}
			</a>																		
		}				
	</Fragment>
}
{((Ebook.length > 0) && EbookISBN) &&
	<Fragment>		
		{Ebook.map(service => (					
			((service.id != "amazon" && service.id != "apple_books" ) &&
				<a class={ButtonClasses} href={service.url.replace(/\%s/, EditionEbooks[0].isbn)} target="_blank" class="block">
					{service.label}
				</a>																		
			)				
		))}
	</Fragment>
	}

	<!-- // AUDIBOOK -->
	{((Audiobook.length > 0 || Audible.length > 0) && (AudiobookAsin || AudiobookISBN) ) &&
		<div class="mt-1">Audiobook</div>	
	}
	
	
	{(Audible.length > 0 && AudiobookAsin) && 
		<Fragment>					
			{
				<a class={ButtonClasses} href={Audible[0].url.replace(/\%s/, AudiobookAsin)} target="_blank" class="block">
					{Audible[0].label}
				</a>																		
			}				
		</Fragment>
	}
	
	{Audiobook.length > 0 && AudiobookISBN && 
		<Fragment>		
			{Audiobook.map(service => (					
				(service.id != "audible" &&
					<a class={ButtonClasses} href={service.url.replace(/\%s/, AudiobookISBN)} target="_blank" class="block">
						{service.label}
					</a>																		
					)				
				))}
		</Fragment>
	}
	
	
	